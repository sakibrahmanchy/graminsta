{"ast":null,"code":"import _taggedTemplateLiteral from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  {\\n    getPreviousPosts {\\n      content\\n      date\\n     }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{gql}from'apollo-boost';import React from'react';import{useQuery}from'@apollo/react-hooks';export var POSTS=gql(_templateObject());export default function Posts(){var _useQuery=useQuery(POSTS),loading=_useQuery.loading,error=_useQuery.error,_useQuery$data=_useQuery.data,data=_useQuery$data===void 0?{}:_useQuery$data;if(loading){return/*#__PURE__*/React.createElement(\"p\",null,\"Loading...\");}if(error){return/*#__PURE__*/React.createElement(\"p\",null,\"Error!\");}var posts=data.getPreviousPosts;if(!posts||!posts.length){return/*#__PURE__*/React.createElement(\"span\",null);}return posts.map(function(_ref){var content=_ref.content,date=_ref.date;return/*#__PURE__*/React.createElement(\"p\",{key:\"\".concat(date)},content,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"em\",null,' ',\"Date posted:\",date));});}","map":{"version":3,"sources":["/app/src/Posts.jsx"],"names":["gql","React","useQuery","POSTS","Posts","loading","error","data","posts","getPreviousPosts","length","map","content","date"],"mappings":"yVAAA,OAASA,GAAT,KAAoB,cAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CAEA,MAAO,IAAMC,CAAAA,KAAK,CAAGH,GAAH,mBAAX,CASP,cAAe,SAASI,CAAAA,KAAT,EAAiB,eAG1BF,QAAQ,CAACC,KAAD,CAHkB,CAE5BE,OAF4B,WAE5BA,OAF4B,CAEnBC,KAFmB,WAEnBA,KAFmB,0BAEZC,IAFY,CAEZA,IAFY,yBAEL,EAFK,gBAK9B,GAAIF,OAAJ,CAAa,CAAE,mBAAO,0CAAP,CAA2B,CAC1C,GAAIC,KAAJ,CAAW,CAAE,mBAAO,sCAAP,CAAuB,CANN,GAQJE,CAAAA,KARI,CAQMD,IARN,CAQtBE,gBARsB,CAU9B,GAAI,CAACD,KAAD,EAAU,CAACA,KAAK,CAACE,MAArB,CAA6B,CAC3B,mBAAO,gCAAP,CACD,CAED,MAAOF,CAAAA,KAAK,CAACG,GAAN,CAAU,kBAAGC,CAAAA,OAAH,MAAGA,OAAH,CAAYC,IAAZ,MAAYA,IAAZ,oBACf,yBAAG,GAAG,WAAKA,IAAL,CAAN,EACGD,OADH,cAEE,8BAFF,cAGE,8BAHF,cAIE,8BACG,GADH,gBAGGC,IAHH,CAJF,CADe,EAAV,CAAP,CAYD","sourcesContent":["import { gql } from 'apollo-boost';\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nexport const POSTS = gql`\n  {\n    getPreviousPosts {\n      content\n      date\n     }\n  }\n`;\n\nexport default function Posts() {\n  const {\n    loading, error, data = {},\n  } = useQuery(POSTS);\n\n  if (loading) { return <p>Loading...</p>; }\n  if (error) { return <p>Error!</p>; }\n\n  const { getPreviousPosts: posts } = data;\n\n  if (!posts || !posts.length) {\n    return <span />;\n  }\n\n  return posts.map(({ content, date }) => (\n    <p key={`${date}`}>\n      {content}\n      <br />\n      <br />\n      <em>\n        {' '}\n        Date posted:\n        {date}\n      </em>\n    </p>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}