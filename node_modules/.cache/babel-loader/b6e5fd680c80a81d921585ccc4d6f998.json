{"ast":null,"code":"var _jsxFileName = \"/Users/sakibur/projects/Personal Projects/test/graminsta/src/Profile.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport Favorite from '@material-ui/icons/Favorite';\nimport { getCookie } from './cookies';\nimport PostDetails from \"./PostDetails\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Navbar from \"./Nav\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.background.paper\n  },\n  user: {\n    flexGrow: 1,\n    marginTop: '5%'\n  }\n}));\nexport default function Profile({\n  match: {\n    params: {\n      id: userId = 0\n    } = {}\n  } = {}\n}) {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [isBusy, setBusy] = useState(true);\n  const [postCount, setPostCount] = useState(0);\n  const [skip, setSkip] = useState(0);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n  const [openDetails, setOpenDetails] = useState(false);\n  const [selectedPost, setSelectedPost] = useState({});\n\n  async function fetchData() {\n    const url = `http://localhost:8078/posts?user_id=${userId}`;\n    fetch(url, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': `Basic ${getCookie('token')}`,\n        'Content-Type': 'application/json'\n      })\n    }).then(res => res.json()).then(response => {\n      setBusy(false);\n\n      if (response.posts) {\n        const posts = response.posts;\n        setData([...data, ...posts]);\n        setSkip(skip + posts.length);\n      }\n\n      if (response.count) {\n        setPostCount(response.count);\n\n        if (skip >= response.count) {\n          setHasMoreItems(false);\n        }\n      }\n    }).catch(() => {\n      setBusy(false);\n      setData(null);\n    });\n  }\n\n  useEffect(() => {\n    setBusy(true);\n    fetchData();\n  }, []);\n  const dataAvailable = !isBusy && data && data[0];\n  const totalLikes = dataAvailable && data && data.reduce((sum, post) => sum + post.likes, 0);\n  const totalComments = dataAvailable && data && data.reduce((sum, post) => sum + post.comments, 0);\n\n  const getItems = () => {\n    if (!data) {\n      return null;\n    }\n\n    return data.map(({\n      photos,\n      content,\n      user: {\n        name,\n        id,\n        imageUrl\n      },\n      likes,\n      comments\n    }, index) => {\n      const [{\n        thumbUrl\n      }] = photos;\n      return /*#__PURE__*/React.createElement(GridListTile, {\n        key: `${thumbUrl}${index}`,\n        className: \"imgContainer\",\n        cols: 1,\n        onClick: () => {\n          setOpenDetails(true);\n          setSelectedPost({\n            image: photos[0].thumbUrl,\n            content,\n            userName: name,\n            id,\n            userImage: imageUrl,\n            likes,\n            comments\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"image\",\n        src: thumbUrl,\n        alt: content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"img-overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Favorite, {\n        style: {\n          marginTop: '2px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 69\n        }\n      }, likes)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ChatBubbleIcon, {\n        style: {\n          marginTop: '2px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }), \" \", comments))));\n    });\n  };\n\n  const items = dataAvailable && /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 293,\n    className: \"gridList\",\n    cols: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, getItems());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(Avatar, {\n    \"aria-label\": \"recipe\",\n    className: classes.large,\n    src: data[0].user.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 41\n    }\n  }, data[0].user.name) : /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 40\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(PostAddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 52\n    }\n  }), \" \", postCount, \" Posts\") : /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 40\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(Favorite, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 52\n    }\n  }), \" \", totalLikes, \" Likes\") : /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 40\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(ChatBubbleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 52\n    }\n  }), \" \", totalComments, \" Comments\") : /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 48\n    }\n  }))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.list,\n    style: {\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, isBusy && /*#__PURE__*/React.createElement(LinearProgress, {\n    color: \"secondary\",\n    style: {\n      marginTop: '3%',\n      height: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 28\n    }\n  }), dataAvailable && data && /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: fetchData,\n    hasMore: hasMoreItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 43\n    }\n  }, items)), openDetails && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PostDetails, {\n    opened: openDetails,\n    onClose: () => setOpenDetails(false),\n    post: selectedPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sakibur/projects/Personal Projects/test/graminsta/src/Profile.jsx"],"names":["React","useState","useEffect","makeStyles","AppBar","Toolbar","Typography","GridList","GridListTile","Grid","ButtonBase","PostAddIcon","ChatBubbleIcon","Favorite","getCookie","PostDetails","LinearProgress","Avatar","Skeleton","InfiniteScroll","Navbar","useStyles","theme","root","display","flexWrap","justifyContent","overflow","flexDirection","backgroundColor","palette","background","paper","user","flexGrow","marginTop","Profile","match","params","id","userId","classes","data","setData","isBusy","setBusy","postCount","setPostCount","skip","setSkip","hasMoreItems","setHasMoreItems","openDetails","setOpenDetails","selectedPost","setSelectedPost","fetchData","url","fetch","method","headers","Headers","then","res","json","response","posts","length","count","catch","dataAvailable","totalLikes","reduce","sum","post","likes","totalComments","comments","getItems","map","photos","content","name","imageUrl","index","thumbUrl","image","userName","userImage","items","large","list","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport Favorite from '@material-ui/icons/Favorite';\nimport { getCookie } from './cookies'\nimport PostDetails from \"./PostDetails\";\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Navbar from \"./Nav\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.background.paper,\n    },\n    user: {\n        flexGrow: 1,\n        marginTop: '5%',\n    },\n}));\n\nexport default function Profile({ match: { params: { id: userId = 0 } = {} } = {}}) {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const [isBusy, setBusy] = useState(true);\n    const [postCount, setPostCount] = useState(0);\n    const [skip, setSkip] = useState(0);\n    const [hasMoreItems, setHasMoreItems] = useState(true);\n    const [openDetails, setOpenDetails] = useState(false);\n    const [selectedPost, setSelectedPost] = useState({});\n\n    async function fetchData() {\n        const url = `http://localhost:8078/posts?user_id=${userId}`;\n\n        fetch(url, {\n            method: 'get',\n            headers: new Headers({\n                'Authorization': `Basic ${getCookie('token')}`,\n                'Content-Type': 'application/json'\n            }),\n        }).then(res => res.json()).then((response) => {\n            setBusy(false);\n            if (response.posts) {\n                const posts = response.posts;\n                setData([ ...data, ...posts ]);\n                setSkip(skip + posts.length);\n            }\n\n            if (response.count) {\n                setPostCount(response.count);\n                if (skip >= response.count) {\n                    setHasMoreItems(false);\n                }\n            }\n        }).catch(() => {\n            setBusy(false);\n            setData(null);\n        });\n    }\n\n    useEffect(() => {\n        setBusy(true);\n\n        fetchData();\n    }, []);\n\n    const dataAvailable = !isBusy && data && data[0];\n    const totalLikes = dataAvailable && data && data.reduce((sum, post) => (sum + post.likes ), 0);\n    const totalComments = dataAvailable && data && data.reduce((sum, post) => (sum + post.comments ), 0);\n\n    const getItems = () => {\n        if (!data) {\n            return null;\n        }\n        return data.map(({ photos, content, user: { name, id, imageUrl }, likes, comments}, index ) => {\n            const [{ thumbUrl }] = photos;\n            return (\n            <GridListTile\n                key={`${thumbUrl}${index}`}\n                className=\"imgContainer\"\n                cols={1}\n                onClick={() => {\n                    setOpenDetails(true);\n                    setSelectedPost({\n                        image: photos[0].thumbUrl,\n                        content,\n                        userName: name,\n                        id,\n                        userImage: imageUrl,\n                        likes,\n                        comments\n                    })\n                }}\n            >\n                <img className=\"image\" src={thumbUrl} alt={content} />\n                <div className=\"img-overlay\" >\n                    <Grid container direction=\"row\">\n                        <Grid item xs className='icon'>\n                            <Favorite style={{ marginTop: '2px'}}/> <span>{likes}</span>\n                        </Grid>\n\n                        <Grid item xs className='icon'>\n                            <ChatBubbleIcon style={{ marginTop: '2px'}}/> {comments}\n                        </Grid>\n                    </Grid>\n                </div>\n            </GridListTile>\n        )});\n    };\n\n    const items = dataAvailable && (\n        <GridList cellHeight={293} className=\"gridList\" cols={4}>\n            {getItems()}\n        </GridList>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Navbar />\n            <div className={classes.user}>\n                <div className={classes.paper}>\n                    <Grid container>\n                        <Grid item>\n                            <ButtonBase className={classes.image}>\n                                {dataAvailable ? (\n                                <Avatar aria-label=\"recipe\" className={classes.large} src={data[0].user.imageUrl}/> ) : (\n                                    <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                                    )\n                                }\n                            </ButtonBase>\n                        </Grid>\n                        <Grid item xs={12} md container>\n                            <Grid item xs container direction=\"column\" >\n                                <Grid item xs>\n                                    {dataAvailable ? (\n                                        <Typography gutterBottom variant=\"h3\">\n                                            {data[0].user.name}\n                                        </Typography>): (\n                                        <Skeleton animation=\"wave\" variant=\"text\"/>\n                                        )\n                                    }\n                                   <Grid item xs container direction=\"row\" >\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <PostAddIcon /> {postCount} Posts\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <Favorite /> {totalLikes} Likes\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <ChatBubbleIcon /> {totalComments} Comments\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                   </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n            <div className={classes.list}  style={{ marginTop: '5%' }}>\n                {isBusy && <LinearProgress color=\"secondary\" style={{ marginTop: '3%', height: '2rem' }}/>}\n                {dataAvailable && data && <InfiniteScroll\n                    pageStart={0}\n                    loadMore={fetchData}\n                    hasMore={hasMoreItems}>\n                    {items}\n                </InfiniteScroll>}\n            </div>\n            {openDetails && <div>\n                <PostDetails\n                    opened={openDetails}\n                    onClose={() => setOpenDetails(false)}\n                    post={selectedPost}/>\n            </div>}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}