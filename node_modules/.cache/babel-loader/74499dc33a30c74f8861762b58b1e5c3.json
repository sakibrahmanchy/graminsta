{"ast":null,"code":"var _jsxFileName = \"/Users/sakibur/projects/Personal Projects/test/graminsta/src/Posts.jsx\";\nimport { gql } from 'apollo-boost';\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nexport const POSTS = gql`\n  {\n    getPreviousPosts {\n      content\n      date\n     }\n  }\n`;\nexport default function Posts() {\n  const {\n    loading,\n    error,\n    data = {}\n  } = useQuery(POSTS);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 23\n      }\n    }, \"Error!\");\n  }\n\n  const {\n    getPreviousPosts: posts\n  } = data;\n\n  if (!posts || !posts.length) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return posts.map(({\n    content,\n    date\n  }) => /*#__PURE__*/React.createElement(\"p\", {\n    key: `${date}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, content, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, ' ', \"Date posted:\", date)));\n}","map":{"version":3,"sources":["/Users/sakibur/projects/Personal Projects/test/graminsta/src/Posts.jsx"],"names":["gql","React","useQuery","POSTS","Posts","loading","error","data","getPreviousPosts","posts","length","map","content","date"],"mappings":";AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAO,MAAMC,KAAK,GAAGH,GAAI;;;;;;;CAAlB;AASP,eAAe,SAASI,KAAT,GAAiB;AAC9B,QAAM;AACJC,IAAAA,OADI;AACKC,IAAAA,KADL;AACYC,IAAAA,IAAI,GAAG;AADnB,MAEFL,QAAQ,CAACC,KAAD,CAFZ;;AAIA,MAAIE,OAAJ,EAAa;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA2B;;AAC1C,MAAIC,KAAJ,EAAW;AAAE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAuB;;AAEpC,QAAM;AAAEE,IAAAA,gBAAgB,EAAEC;AAApB,MAA8BF,IAApC;;AAEA,MAAI,CAACE,KAAD,IAAU,CAACA,KAAK,CAACC,MAArB,EAA6B;AAC3B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAOD,KAAK,CAACE,GAAN,CAAU,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,kBACf;AAAG,IAAA,GAAG,EAAG,GAAEA,IAAK,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,kBAGGC,IAHH,CAJF,CADK,CAAP;AAYD","sourcesContent":["import { gql } from 'apollo-boost';\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nexport const POSTS = gql`\n  {\n    getPreviousPosts {\n      content\n      date\n     }\n  }\n`;\n\nexport default function Posts() {\n  const {\n    loading, error, data = {},\n  } = useQuery(POSTS);\n\n  if (loading) { return <p>Loading...</p>; }\n  if (error) { return <p>Error!</p>; }\n\n  const { getPreviousPosts: posts } = data;\n\n  if (!posts || !posts.length) {\n    return <span />;\n  }\n\n  return posts.map(({ content, date }) => (\n    <p key={`${date}`}>\n      {content}\n      <br />\n      <br />\n      <em>\n        {' '}\n        Date posted:\n        {date}\n      </em>\n    </p>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}