{"ast":null,"code":"var _jsxFileName = \"/Users/sakibur/projects/Personal Projects/test/graminsta/src/Profile.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Post from './Post';\nimport { getCookie } from './cookies';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    backgroundColor: theme.palette.background.paper\n  },\n  user: {\n    flexGrow: 1,\n    marginTop: '5%'\n  },\n  list: {\n    flexGrow: 1,\n    padding: theme.spacing(2),\n    margin: 'auto'\n  },\n  gridList: {\n    width: 750\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  large: {\n    width: theme.spacing(15),\n    height: theme.spacing(15)\n  }\n}));\nexport default function Profile({\n  match: {\n    params: {\n      id: userId = 0\n    } = {}\n  } = {}\n}) {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const [isBusy, setBusy] = useState(true);\n  useEffect(() => {\n    setBusy(true);\n\n    async function fetchData() {\n      const url = `http://localhost:8078/posts?user_id=${userId}`;\n      fetch(url, {\n        method: 'get',\n        headers: new Headers({\n          'Authorization': `Basic ${getCookie('token')}`,\n          'Content-Type': 'application/json'\n        })\n      }).then(res => res.json()).then(response => {\n        console.log(response);\n        setBusy(false);\n        setData(response);\n      }).catch(() => {\n        setBusy(false);\n        setData(null);\n      });\n    }\n\n    fetchData();\n  }, []);\n  const dataAvailable = !isBusy && data && data[0];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"curl-fonts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"GramInsta\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(Avatar, {\n    \"aria-label\": \"recipe\",\n    className: classes.large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, data[0].user.name.split('')[0])) : /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, dataAvailable ? /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  }, data[0].user.name) : /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, \"Standard license\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }, \"Full resolution 1920x1080 \\u2022 JPEG\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, \"ID: 1030114\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, \"Remove\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"$19.00\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.list,\n    style: {\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, isBusy && /*#__PURE__*/React.createElement(LinearProgress, {\n    color: \"secondary\",\n    style: {\n      marginTop: '3%',\n      height: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 28\n    }\n  }), dataAvailable && /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 293,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 35\n    }\n  }, data && data.map(({\n    photos,\n    content,\n    user: {\n      name\n    }\n  }) => {\n    const [{\n      thumbUrl\n    }] = photos;\n    return /*#__PURE__*/React.createElement(GridListTile, {\n      key: thumbUrl,\n      cols: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: thumbUrl,\n      alt: content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }));\n  }))));\n}","map":{"version":3,"sources":["/Users/sakibur/projects/Personal Projects/test/graminsta/src/Profile.jsx"],"names":["React","useState","useEffect","makeStyles","AppBar","Toolbar","Typography","Button","GridList","GridListTile","Grid","Paper","ButtonBase","Post","getCookie","LinearProgress","Avatar","Skeleton","useStyles","theme","root","display","flexWrap","justifyContent","overflow","flexDirection","backgroundColor","palette","background","paper","user","flexGrow","marginTop","list","padding","spacing","margin","gridList","width","maxWidth","image","height","img","maxHeight","large","Profile","match","params","id","userId","classes","data","setData","isBusy","setBusy","fetchData","url","fetch","method","headers","Headers","then","res","json","response","console","log","catch","dataAvailable","name","split","cursor","map","photos","content","thumbUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Post from './Post';\nimport { getCookie } from './cookies'\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.background.paper,\n    },\n    user: {\n        flexGrow: 1,\n        marginTop: '5%',\n    },\n    list: {\n        flexGrow: 1,\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n    gridList: {\n        width: 750 ,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 500,\n    },\n    image: {\n        width: 128,\n        height: 128,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    large: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n    },\n}));\n\nexport default function Profile({ match: { params: { id: userId = 0 } = {} } = {}}) {\n    const classes = useStyles();\n    const [data, setData] = useState(null);\n    const [isBusy, setBusy] = useState(true);\n\n\n    useEffect(() => {\n        setBusy(true);\n        async function fetchData() {\n            const url = `http://localhost:8078/posts?user_id=${userId}`;\n\n            fetch(url, {\n                method: 'get',\n                headers: new Headers({\n                    'Authorization': `Basic ${getCookie('token')}`,\n                    'Content-Type': 'application/json'\n                }),\n            }).then(res => res.json()).then((response) => {\n                console.log(response);\n                setBusy(false);\n                setData(response);\n            }).catch(() => {\n                setBusy(false);\n                setData(null);\n            });\n        }\n\n        fetchData();\n    }, []);\n\n    const dataAvailable = !isBusy && data && data[0];\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" color=\"white\">\n                <Toolbar>\n                    <Typography variant=\"h4\">\n                        <span className=\"curl-fonts\">GramInsta</span>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.user}>\n                <Paper className={classes.paper}>\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <ButtonBase className={classes.image}>\n                                {dataAvailable ? (\n                                <Avatar aria-label=\"recipe\" className={classes.large}>\n                                    <h1>{data[0].user.name.split('')[0]}</h1>\n                                </Avatar>) : (\n                                    <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                                    )\n                                }\n                            </ButtonBase>\n                        </Grid>\n                        <Grid item xs={12} sm container>\n                            <Grid item xs container direction=\"column\" spacing={2}>\n                                <Grid item xs>\n                                    {dataAvailable ? (\n                                        <Typography gutterBottom variant=\"h1\">\n                                            {data[0].user.name}\n                                        </Typography>): (\n                                        <Skeleton animation=\"wave\" variant=\"text\"/>\n                                        )\n                                    }\n                                    <Typography gutterBottom variant=\"subtitle1\">\n                                        Standard license\n                                    </Typography>\n                                    <Typography variant=\"body2\" gutterBottom>\n                                        Full resolution 1920x1080 • JPEG\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        ID: 1030114\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\n                                        Remove\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"subtitle1\">$19.00</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n            <div className={classes.list}  style={{ marginTop: '5%' }}>\n\n                {isBusy && <LinearProgress color=\"secondary\" style={{ marginTop: '3%', height: '2rem' }}/>}\n                {dataAvailable && <GridList cellHeight={293} className={classes.gridList} cols={3}>\n                    {data && data.map(({ photos, content, user: { name }}) => {\n                        const [{thumbUrl}] = photos;\n                        return (\n                            <GridListTile key={thumbUrl} cols={1}>\n                                <img src={thumbUrl} alt={content} />\n                            </GridListTile>\n                        );\n                    })}\n                </GridList>}\n            </div>\n            {/*{isBusy && <LinearProgress color=\"secondary\" style={{ marginTop: '3%', height: '2rem' }}/>}*/}\n            {/*{!isBusy && data && Array.isArray(data) && <div>*/}\n            {/*    {data && data.map(({ photos, content, user: { name } })=> {*/}\n            {/*        console.log(content);*/}\n            {/*        const [{ thumbUrl }] = photos;*/}\n            {/*        console.log(thumbUrl);*/}\n            {/*        // eslint-disable-next-line no-unused-expressions*/}\n            {/*        return <Post image={thumbUrl} content={content} userName={name}/>*/}\n            {/*    })}*/}\n            {/*</div>}*/}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}