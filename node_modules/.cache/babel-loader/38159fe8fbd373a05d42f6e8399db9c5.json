{"ast":null,"code":"var _jsxFileName = \"/Users/sakibur/projects/Personal Projects/test/graminsta/src/login.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport BackgroundImage from './images/login.jpeg';\nimport { setCookie } from './cookies';\nimport ReactDOM from \"react-dom\";\nimport { Redirect } from 'react-router';\nimport App from \"./App\";\nexport default function Login({\n  onSuccessfulLogin\n}) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const getField = fieldId => {\n    return document.getElementById(fieldId);\n  };\n\n  const loginValidated = token => {\n    setCookie('token', token, 60 * 1000);\n    setRedirect(true);\n  };\n\n  const loginUser = (email, password) => {\n    fetch('http://localhost:8078/login', {\n      method: 'POST',\n      headers: new Headers({\n        'Authorization': 'Basic eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NjQwNjY3MywiZXhwIjoxNTk2NDEwMjczfQ.7GQBLLDQFZxm1dXPQTd3jN0ArmHOoyPxOUb5bTTMcrs',\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n\n      if (res.token) {\n        loginValidated(res.token);\n      }\n    }).catch(e => {\n      throw e;\n    });\n  };\n\n  const typeAuto = async (text, fieldId) => {\n    const data = text.split('');\n    const field = getField(fieldId);\n    field.value = '';\n    await async function autoTypeMe() {\n      var letter = data.shift();\n      field.value += letter;\n\n      if (data.length) {\n        setTimeout(await autoTypeMe, 20);\n      }\n    }();\n  };\n\n  const loginWithMockUser = async () => {\n    // const email = 'demouser@graminsta.com';\n    // const password = 'demouser@graminsta';\n    const email = 'Dee0@gmail.com';\n    const passworkd = 'fakepass';\n    await typeAuto(email, 'email');\n    await typeAuto(password, 'password');\n    await loginUser(email, password);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, redirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: BackgroundImage,\n    className: \"bg-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center curl-fonts large-fonts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Gram\", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 32\n    }\n  }, \"Insta\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    autoComplete: \"nope\",\n    id: \"email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    autoComplete: \"new-password\",\n    id: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"gramInsta, love thy art\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-red\",\n    onClick: loginWithMockUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Login as mock user\")))));\n}\n;\nconst root = document.getElementById('login');\n\nif (typeof document !== 'undefined' && root) {\n  ReactDOM.render( /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 64\n    }\n  }), root);\n}","map":{"version":3,"sources":["/Users/sakibur/projects/Personal Projects/test/graminsta/src/login.jsx"],"names":["React","useState","useEffect","BackgroundImage","setCookie","ReactDOM","Redirect","App","Login","onSuccessfulLogin","email","setEmail","password","setPassword","redirect","setRedirect","getField","fieldId","document","getElementById","loginValidated","token","loginUser","fetch","method","headers","Headers","body","JSON","stringify","then","res","json","console","log","catch","e","typeAuto","text","data","split","field","value","autoTypeMe","letter","shift","length","setTimeout","loginWithMockUser","passworkd","target","root","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BackgroundImage from './images/login.jpeg';\nimport { setCookie } from './cookies';\nimport ReactDOM from \"react-dom\";\nimport { Redirect } from 'react-router'\nimport App from \"./App\";\nexport default function Login ({ onSuccessfulLogin }) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const getField = (fieldId) => {\n        return document.getElementById(fieldId);\n    };\n\n    const loginValidated = (token) => {\n                setCookie('token', token, 60*1000);\n                setRedirect(true);\n    }\n\n    const loginUser = (email, password) => {\n        fetch('http://localhost:8078/login', {\n            method: 'POST',\n            headers: new Headers({\n                'Authorization': 'Basic eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NjQwNjY3MywiZXhwIjoxNTk2NDEwMjczfQ.7GQBLLDQFZxm1dXPQTd3jN0ArmHOoyPxOUb5bTTMcrs',\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify({\n                email,\n                password,\n            })\n        }).then(res => res.json()).then(res => {\n            console.log(res);\n            if (res.token) {\n               loginValidated(res.token);\n            }\n        }).catch(e => {\n            throw e;\n        });\n    } ;\n\n    const typeAuto = async (text, fieldId) => {\n        const data = text.split('');\n        const field = getField(fieldId);\n        field.value = '';\n        await (async function autoTypeMe() {\n            var letter = data.shift();\n            field.value += letter;\n            if (data.length) {\n                setTimeout(await autoTypeMe, 20);\n            }\n        }());\n    };\n\n    const loginWithMockUser = async () => {\n        // const email = 'demouser@graminsta.com';\n        // const password = 'demouser@graminsta';\n        const email = 'Dee0@gmail.com';\n        const passworkd = 'fakepass';\n        await typeAuto(email, 'email');\n        await typeAuto(password, 'password');\n        await loginUser(email, password);\n    };\n\n    return (\n        <div>\n            {redirect && <Redirect to=\"/dashboard\" />}\n           <img alt=\"\" src={BackgroundImage} className=\"bg-image\"/>\n            <div className=\"login-form overlay\">\n                <div className=\"text-center curl-fonts large-fonts\">\n                    <h1><b>Gram<i>Insta</i></b></h1>\n                </div>\n                <br/>\n                <div>\n                    <h2 className=\"text-center\">Login</h2>\n                    <div className=\"content\">\n                        <div className=\"input-field\">\n                            <input\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                autoComplete=\"nope\"\n                                id=\"email\"\n                                value={email}\n                                onChange={(e) => {setEmail(e.target.value)}}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"input-field\">\n                            <input\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                autoComplete=\"new-password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => {setPassword(e.target.value)}}\n                                disabled\n                            />\n                        </div>\n                        <a className=\"link\">gramInsta, love thy art</a>\n                    </div>\n                    {/*<div className=\"action\">*/}\n                    {/*    <button className=\"btn-red\">Register</button>*/}\n                    {/*    <button onClick={() => loginUser(email, password)}>Sign in</button>*/}\n                    {/*</div>*/}\n                    <div>\n                        <button className=\"btn-red\" onClick={loginWithMockUser}>Login as mock user</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst root = document.getElementById('login');\n\nif (typeof document !== 'undefined' && root) { ReactDOM.render(<Login />, root); }\n"]},"metadata":{},"sourceType":"module"}