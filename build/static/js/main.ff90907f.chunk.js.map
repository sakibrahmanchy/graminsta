{"version":3,"sources":["images/login.jpeg","utils/cookie.js","utils/api.js","Login.jsx","utils/date.js","Post.jsx","Nav.jsx","Dashboard.jsx","PostDetails.jsx","Profile.jsx","utils/auth.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","baseUrl","Login","useState","email","setEmail","password","setPassword","redirect","setRedirect","getField","fieldId","getElementById","loginValidated","token","cvalue","ext","d","Date","setTime","getTime","expires","toUTCString","setCookie","loginUser","fetch","method","headers","Headers","body","JSON","stringify","then","res","json","catch","e","typeAuto","text","a","data","field","value","letter","shift","setTimeout","autoTypeMe","loginWithMockUser","to","alt","src","BackgroundImage","className","style","color","type","placeholder","autoComplete","id","onChange","target","disabled","onClick","formatDate","dateTime","toLocaleDateString","weekday","year","month","day","hour","minute","useStyles","makeStyles","theme","root","maxWidth","media","height","width","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","green","skeletonStyle","background","Post","image","content","userName","userImage","createdAt","likes","comments","classes","React","imgLoading","setImgLoading","Card","marginTop","CardHeader","Skeleton","animation","variant","Avatar","aria-label","action","IconButton","title","marginBottom","subheader","onLoad","CardContent","Typography","component","CardActions","disableSpacing","Grid","container","direction","item","xs","Navbar","AppBar","position","Toolbar","justify","textDecoration","Button","flexGrow","menuButton","marginRight","spacing","Dashboard","setData","isBusy","setBusy","skip","setSkip","hasMoreItems","setHasMoreItems","fetchData","url","response","errors","posts","count","useEffect","items","map","photos","user","imageUrl","postId","thumbUrl","key","LinearProgress","pageStart","loadMore","hasMore","DialogContent","withStyles","padding","MuiDialogContent","PostDetails","opened","onClose","post","margin","overflow","closeButton","open","setOpen","postCreatedAt","showloader","Dialog","aria-labelledby","fullWidth","overlow","dividers","hidden","float","cursor","List","commentContent","ListItem","alignItems","ListItemAvatar","ListItemText","primary","secondary","Fragment","inline","Divider","display","flexWrap","justifyContent","flexDirection","palette","paper","list","img","maxHeight","large","Profile","match","params","userId","postCount","setPostCount","openDetails","setOpenDetails","selectedPost","setSelectedPost","dataAvailable","totalLikes","reduce","sum","totalComments","GridList","cellHeight","cols","index","GridListTile","ButtonBase","md","gutterBottom","auth","isAuthenticated","authenticate","cb","signout","PrivateRoute","ChildComponent","rest","render","props","pathname","state","from","location","App","exact","path","Boolean","window","hostname","createMuiTheme","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ff90907f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.a84414a6.jpeg\";","/**\n * Setting a cookie with expiry time.\n *\n * @param cname\n * @param cvalue\n * @param ext\n */\nexport const setCookie = (cname, cvalue, ext) => {\n    var d = new Date();\n    d.setTime(d.getTime() + (ext));\n    var expires = \"expires=\"+ d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n};\n\n/**\n * Deleting a cookie by name.\n *\n * @param cname\n */\nexport const deleteCookie = (cname) => {\n    document.cookie = `${cname}=`;\n};\n\n/**\n * Getting a cookie by name.\n * @param cname\n * @returns {string}\n */\nexport const getCookie = (cname) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n};\n","/**\n * Base url to hit\n * @type {string}\n */\nexport const baseUrl = 'http://localhost:8078';\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport BackgroundImage from './images/login.jpeg';\nimport { setCookie, getCookie } from './utils/cookie';\nimport { baseUrl } from \"./utils/api\";\n\nexport default function Login () {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const getField = (fieldId) => {\n        return document.getElementById(fieldId);\n    };\n\n    const loginValidated = (token) => {\n        setCookie('token', token, 60*1000);\n        setRedirect(true);\n    };\n\n    const loginUser = (email, password) => {\n        fetch(`${baseUrl}/login`, {\n            method: 'POST',\n            headers: new Headers({\n                'Authorization': `Basic ${getCookie('token')}`,\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify({\n                email,\n                password,\n            })\n        }).then(res => res.json()).then(res => {\n            if (res.token) {\n               loginValidated(res.token);\n            }\n        }).catch(e => {\n            throw e;\n        });\n    } ;\n\n    const typeAuto = async (text, fieldId) => {\n        const data = text.split('');\n        const field = getField(fieldId);\n        field.value = '';\n        await (async function autoTypeMe() {\n            var letter = data.shift();\n            field.value += letter;\n            if (data.length) {\n                setTimeout(await autoTypeMe, 20);\n            }\n        }());\n    };\n\n    const loginWithMockUser = async () => {\n        const email = 'mockuser@graminsta.com';\n        const password = 'mockuser';\n        await typeAuto(email, 'email');\n        await typeAuto(password, 'password');\n        await loginUser(email, password);\n    };\n\n    return (\n        <div>\n            {redirect && <Redirect to=\"/dashboard\" />}\n           <img alt=\"\" src={BackgroundImage} className=\"bg-image\"/>\n            <div className=\"login-form overlay\">\n                <div className=\"text-center curl-fonts large-fonts\">\n                    <h1 style={{ color: '#ed576b' }}><b>Gram<i>Insta</i></b></h1>\n                </div>\n                <br/>\n                <div>\n                    <h2 className=\"text-center\">Login</h2>\n                    <div className=\"content\">\n                        <div className=\"input-field\">\n                            <input\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                autoComplete=\"nope\"\n                                id=\"email\"\n                                value={email}\n                                onChange={(e) => {setEmail(e.target.value)}}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"input-field\">\n                            <input\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                autoComplete=\"new-password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => {setPassword(e.target.value)}}\n                                disabled\n                            />\n                        </div>\n                        <span>gramInsta, love thy art</span>\n                    </div>\n                    <div>\n                        <button className=\"btn-red\" onClick={loginWithMockUser}>Login as mock user</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n","/**\n *  Formatting date time to a readable format\n *  Example: Tuesday, August 4, 2020, 7:18 AM\n *\n * @param dateTime\n * @returns {string}\n */\nexport const formatDate = (dateTime) => {\n    const date = new Date(dateTime);\n    const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n    };\n    return date.toLocaleDateString(\"en-US\", options);\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { green } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Link } from 'react-router-dom';\nimport {formatDate} from \"./utils/date\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 600,\n    },\n    media: {\n        height: 500,\n        width: 750,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: green[500],\n    },\n}));\n\nconst skeletonStyle = { background: 'lightPink' };\n\nexport default function Post({ image, content, userName = '', id, userImage, createdAt, likes, comments }) {\n    const classes = useStyles();\n    const [imgLoading, setImgLoading] = React.useState(true);\n\n    return (\n       <div>\n           <Card className={classes.root} style={{ marginLeft: '30%', marginTop: '5%' }}>\n               <CardHeader\n                   avatar={\n                       imgLoading ? (\n                           <Skeleton style={skeletonStyle} animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                       ) : (\n                           <Avatar aria-label=\"recipe\" className={classes.avatar} src={userImage}/>\n                       )\n                   }\n                   action={\n                       <IconButton aria-label=\"settings\">\n                           <MoreVertIcon />\n                       </IconButton>\n                   }\n                   title={imgLoading ?\n                       (\n                           <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />\n                       ) :\n                       (<Link to={`profile/${id}`}>{userName} </Link>)\n                      }\n                   subheader={imgLoading ? <Skeleton animation=\"wave\" height={10} width=\"40%\" /> :  (formatDate(createdAt))}\n               />\n               {imgLoading ?  <Skeleton style={skeletonStyle} variant=\"rect\" width={600} height={500} /> : null}\n           {    <img\n                   alt={id}\n                   width=\"600px\"\n                   height=\"500px\"\n                   src={image}\n                   onLoad={() => {setImgLoading(false)}}\n               />\n               }\n               <CardContent>\n                   <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                       {content}\n                   </Typography>\n               </CardContent>\n               <CardActions disableSpacing>\n                   <Grid container direction=\"row\">\n                       <Grid item xs className=\"icon\">\n                           <FavoriteIcon/> <span>{likes}</span>\n                       </Grid>\n                       <Grid item xs className='icon'>\n                           <ChatBubbleIcon style={{ marginLeft: '-230px' }}/> {comments}\n                       </Grid>\n                   </Grid>\n               </CardActions>\n           </Card>\n       </div>\n    );\n}\n","import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Redirect } from 'react-router';\nimport { deleteCookie } from './utils/cookie';\nimport React, {useState} from \"react\";\n\nexport default function Navbar() {\n    const [redirect, setRedirect] = useState( false );\n    return (\n        <AppBar position=\"fixed\" color=\"default\">\n            {redirect && <Redirect to='/login'/>}\n            <Toolbar>\n              <Grid\n                  container\n                  justify=\"space-between\"\n              >\n                  <Typography variant=\"h4\">\n                      <Link className=\"curl-fonts\" to=\"/dashboard\" style={{ textDecoration: 'none', color: '#ed576b' }}>GramInsta</Link>\n                  </Typography>\n                  <Button\n                      color=\"inherit\"\n                      onClick={() => {\n                          deleteCookie('token');\n                          setRedirect(true);\n                      }}\n                  >Logout</Button>\n              </Grid>\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport Post from './Post';\nimport { getCookie } from './utils/cookie';\nimport { baseUrl } from \"./utils/api\";\nimport Navbar from \"./Nav\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles();\n\n    const [data, setData] = useState([]);\n    const [isBusy, setBusy] = useState(true);\n    const [skip, setSkip] = useState(0);\n    const [hasMoreItems, setHasMoreItems] = useState(true);\n    const [redirect, setRedirect] = useState(false);\n\n    /**\n     * Fetching posts from api, in dashboard view\n     * @returns {Promise<void>}\n     */\n    async function fetchData() {\n        const take = 10;\n        const url = `${baseUrl}/posts?take=${take}&skip=${skip}`;\n\n        fetch(url, {\n            method: 'get',\n            headers: new Headers({\n                'Authorization': `Basic ${getCookie('token')}`,\n                'Content-Type': 'application/json'\n            }),\n        }).then(res => res.json()).then((response) => {\n            setBusy(false);\n\n            if (response.errors) {\n               setRedirect(true);\n            }\n\n            if (response.posts) {\n                const posts = response.posts;\n                setData([ ...data, ...posts ]);\n                setSkip(skip + posts.length);\n            }\n            if (response.count) {\n                if (skip >= response.count) {\n                    setHasMoreItems(false);\n                }\n            }\n        }).catch(() => {\n            setBusy(false);\n            setData(null);\n        });\n    }\n\n    useEffect(() => {\n        setBusy(true);\n        fetchData();\n    }, []);\n\n    /**\n     * Rendering each posts using the Post component\n     * @type {*[]}\n     */\n    const items = (data && data.map(({\n         photos,\n         content,\n         user: { name, id, imageUrl: userImage },\n         id: postId,\n         createdAt,\n         likes,\n         comments,\n    })=> {\n        const [{ thumbUrl }] = photos;\n        return <Post\n            key={postId}\n            image={thumbUrl}\n            userImage={userImage}\n            content={content}\n            userName={name} id={id}\n            createdAt={createdAt}\n            likes={likes}\n            comments={comments}\n        />\n    })) || [];\n\n    return (\n        <div className={classes.root}>\n            {redirect && <Redirect to='/login'/>}\n            <Navbar />\n            {isBusy && <LinearProgress color=\"secondary\" style={{ marginTop: '3%', height: '2rem' }}/>}\n            {!isBusy && items.length && <div>\n                <InfiniteScroll\n                    pageStart={0}\n                    loadMore={fetchData}\n                    hasMore={hasMoreItems}>\n                    {items}\n                </InfiniteScroll>\n            </div>}\n        </div>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport {green} from \"@material-ui/core/colors\";\nimport Grid from '@material-ui/core/Grid';\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport { baseUrl } from \"./utils/api\";\nimport { getCookie } from \"./utils/cookie\";\nimport { formatDate } from \"./utils/date\";\n\nconst styles = () => ({\n    root: {\n        margin: 0,\n        height: '500px',\n        width: '935px',\n        overflow: 'auto',\n    },\n    closeButton: {\n        position: 'absolute',\n    },\n    media: {\n        height: '100%',\n        width: '100%',\n        paddingTop: '56.25%', // 16:9\n    },\n    avatar: {\n        backgroundColor: green[500],\n    },\n});\n\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nexport default function PostDetails({ opened, onClose, post }) {\n    const { postId } = post;\n    const classes = styles();\n    const [open, setOpen] = useState(opened);\n    const [imgLoading, setImgLoading] = useState(true);\n    const [isBusy, setBusy] = useState(false);\n    const [data, setData] = useState(false);\n\n\n    async function fetchData(id) {\n        const url = `${baseUrl}/posts/${id}`;\n\n        fetch(url, {\n            method: 'get',\n            headers: new Headers({\n                'Authorization': `Basic ${getCookie('token')}`,\n                'Content-Type': 'application/json'\n            }),\n        }).then(res => res.json()).then((response) => {\n            setBusy(false);\n\n            if (response) {\n               setData(response)\n            }\n        }).catch(() => {\n            setBusy(false);\n            setData(null);\n        });\n    }\n\n    useEffect(() => {\n        setBusy(true);\n        fetchData(postId);\n    }, []);\n\n    const handleClose = () => {\n        setOpen(false);\n        onClose(false);\n    };\n\n    const {\n            photos = [],\n            content = '',\n            user: { name: userName = '', imageUrl: userImage = '' } = {},\n            likes,\n            comments,\n            createdAt: postCreatedAt = '',\n    } = data || {};\n    const [{ thumbUrl: image = ''} = {}] = photos;\n    const showloader = isBusy || imgLoading;\n\n    return (\n        <div>\n            <Dialog\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}\n                fullWidth={true}\n                maxWidth = {'md'}\n                style={{ height: '800px', overlow: 'hidden' }}\n            >\n                <DialogContent dividers style={{ overflow: 'hidden' }}>\n                    <div>\n                        <Grid container direction=\"row\" >\n                            <Grid item xs={7}>\n                                {showloader ? <Skeleton variant=\"rect\" width={550} height={700} /> : null }\n                                <img\n                                    alt={content}\n                                    hidden={showloader}\n                                    src={image}\n                                    style={{ width: '100%', height: '700px' }}\n                                    onLoad={() => {\n                                        setTimeout(() => {\n                                            setImgLoading(false)\n                                        }, 300);\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={5} style={{ padding: '10px' }}>\n                                <div style={{ float: 'right', marginBottom: '10px' }}>\n                                    <CloseIcon onClick={() => {onClose(true)}} style={{ cursor: \"pointer\" }}/>\n                                </div>\n                                <CardHeader\n                                    avatar={\n                                        showloader ? (\n                                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                                        ) : (\n                                            <Avatar aria-label=\"recipe\" src={userImage}/>\n                                        )\n                                    }\n                                    title={showloader ?\n                                        (\n                                            <Skeleton animation=\"wave\" height={10}  style={{ marginBottom: 6 }} />\n                                        ) :\n                                        (<b>{userName} </b>)\n                                    }\n                                    subheader={showloader ? (<Skeleton animation=\"wave\" height={10} width=\"50%\" />) :\n                                        (formatDate(postCreatedAt))\n                                    }\n                                />\n                               <div style={{ padding: '16px', paddingTop: '0px' }}>\n                                   <div>\n                                       <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                           {showloader ? (\n                                              <span>\n                                                  <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                  <Skeleton animation=\"wave\" height={10}  style={{ marginBottom: 6 }} />\n                                                  <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                  <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                  <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                  <Skeleton animation=\"wave\" height={10} width=\"50%\" />\n                                              </span>\n\n                                           ): (\n                                              <p>\n                                                  {content}\n                                              </p>\n                                           )}\n                                       </Typography>\n                                   </div>\n                                   <Grid container direction=\"row\" style={{ paddingTop: '10px' }}>\n                                       {showloader ? <Skeleton animation=\"wave\"  width={30} height={30} />:\n                                           (<Grid item xs className=\"icon\">\n                                               <FavoriteIcon style={{ marginTop: '2px'}}/> <span>{likes}</span>\n                                           </Grid>)}\n\n                                       {showloader? <Skeleton animation=\"wave\" width={30} height={30} style={{ marginLeft: '20px'}}/> : (\n                                           <Grid item xs className='icon'>\n                                               <ChatBubbleIcon style={{ marginTop: '2px', marginLeft: '-110px' }}/> {comments.length}\n                                           </Grid>\n                                       ) }\n                                   </Grid>\n                               </div>\n                                <div style={{ height: '520px', overflow: 'scroll'}}>\n                                    <List className={classes.root}>\n                                        {\n                                            showloader ?\n                                            (\n                                                <div style={{ padding: '16px' }}>\n                                                    <div style={{ paddingTop: '10px'}}>\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10}  style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} width=\"50%\" />\n                                                    </div>\n\n                                                    <div style={{ paddingTop: '10px'}}>\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10}  style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} width=\"50%\" />\n                                                    </div>\n\n                                                    <div style={{ paddingTop: '10px'}}>\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10}  style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                                        <Skeleton animation=\"wave\" height={10} width=\"50%\" />\n                                                    </div>\n                                                </div>\n                                            )\n                                            :\n                                                ( comments.map(({\n                                                    content: commentContent = '',\n                                                    user: {\n                                                        name: userName = '',\n                                                        imageUrl = '',\n                                                    },\n                                                }) => {\n                                                return (\n                                                    <div>\n                                                        <ListItem alignItems=\"flex-start\">\n                                                            <ListItemAvatar>\n                                                                <Avatar alt=\"Remy Sharp\" src={imageUrl} />\n                                                            </ListItemAvatar>\n                                                            <ListItemText\n                                                                primary={userName}\n                                                                secondary={\n                                                                    <React.Fragment>\n                                                                        <Typography\n                                                                            component=\"span\"\n                                                                            variant=\"body2\"\n                                                                            className={classes.inline}\n                                                                            color=\"textPrimary\"\n                                                                        >\n                                                                            {commentContent}\n                                                                        </Typography>\n                                                                    </React.Fragment>\n                                                                }\n                                                            />\n                                                        </ListItem>\n                                                        <Divider variant=\"inset\" component=\"li\" />\n                                                    </div>\n                                                )\n                                            }))\n                                        }\n                                    </List>\n                                </div>\n                            </Grid>\n\n                        </Grid>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport Favorite from '@material-ui/icons/Favorite';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { getCookie } from './utils/cookie';\nimport PostDetails from \"./PostDetails\";\nimport Navbar from \"./Nav\";\nimport { baseUrl } from \"./utils/api\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.background.paper,\n    },\n    user: {\n        flexGrow: 1,\n        marginTop: '5%',\n    },\n    list: {\n        flexGrow: 1,\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 500,\n    },\n    image: {\n        width: 128,\n        height: 128,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    large: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n    },\n}));\n\nexport default function Profile({ match: { params: { id: userId = 0 } = {} } = {}}) {\n    const classes = useStyles();\n    const [data, setData] = useState([]);\n    const [isBusy, setBusy] = useState(true);\n    const [postCount, setPostCount] = useState(0);\n    const [skip, setSkip] = useState(0);\n    const [hasMoreItems, setHasMoreItems] = useState(true);\n    const [openDetails, setOpenDetails] = useState(false);\n    const [selectedPost, setSelectedPost] = useState({});\n\n    async function fetchData() {\n        const url = `${baseUrl}/posts?user_id=${userId}`;\n\n        fetch(url, {\n            method: 'get',\n            headers: new Headers({\n                'Authorization': `Basic ${getCookie('token')}`,\n                'Content-Type': 'application/json'\n            }),\n        }).then(res => res.json()).then((response) => {\n            setBusy(false);\n            if (response.posts) {\n                const posts = response.posts;\n                setData([ ...data, ...posts ]);\n                setSkip(skip + posts.length);\n            }\n\n            if (response.count) {\n                setPostCount(response.count);\n                if (skip >= response.count) {\n                    setHasMoreItems(false);\n                }\n            }\n        }).catch(() => {\n            setBusy(false);\n            setData(null);\n        });\n    }\n\n    useEffect(() => {\n        setBusy(true);\n\n        fetchData();\n    }, []);\n\n    const dataAvailable = !isBusy && data && data[0];\n    const totalLikes = dataAvailable && data && data.reduce((sum, post) => (sum + post.likes ), 0);\n    const totalComments = dataAvailable && data && data.reduce((sum, post) => (sum + post.comments ), 0);\n\n    const getItems = () => {\n        if (!data) {\n            return null;\n        }\n        return data.map(({ photos, content, user: { name, id, imageUrl }, likes, comments, id: postId}, index ) => {\n            const [{ thumbUrl }] = photos;\n            return (\n            <GridListTile\n                key={`${thumbUrl}${index}`}\n                className=\"imgContainer\"\n                cols={1}\n                onClick={() => {\n                    setOpenDetails(true);\n                    setSelectedPost({\n                        postId,\n                    })\n                }}\n            >\n                <img className=\"image\" src={thumbUrl} alt={content} />\n                <div className=\"img-overlay\" >\n                    <Grid container direction=\"row\">\n                        <Grid item xs className='icon'>\n                            <Favorite style={{ marginTop: '2px'}}/> <span>{likes}</span>\n                        </Grid>\n\n                        <Grid item xs className='icon'>\n                            <ChatBubbleIcon style={{ marginTop: '2px'}}/> {comments}\n                        </Grid>\n                    </Grid>\n                </div>\n            </GridListTile>\n        )});\n    };\n\n    const items = dataAvailable && (\n        <GridList cellHeight={293} className=\"gridList\" cols={4}>\n            {getItems()}\n        </GridList>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Navbar />\n            <div className={classes.user}>\n                <div className={classes.paper}>\n                    <Grid container>\n                        <Grid item>\n                            <ButtonBase className={classes.image}>\n                                {dataAvailable ? (\n                                <Avatar aria-label=\"recipe\" className={classes.large} src={data[0].user.imageUrl}/> ) : (\n                                    <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                                    )\n                                }\n                            </ButtonBase>\n                        </Grid>\n                        <Grid item xs={12} md container>\n                            <Grid item xs container direction=\"column\" >\n                                <Grid item xs>\n                                    {dataAvailable ? (\n                                        <Typography gutterBottom variant=\"h3\">\n                                            {data[0].user.name}\n                                        </Typography>): (\n                                        <Skeleton animation=\"wave\" variant=\"text\"/>\n                                        )\n                                    }\n                                   <Grid item xs container direction=\"row\" >\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <PostAddIcon /> {postCount} Posts\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <Favorite /> {totalLikes} Likes\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <ChatBubbleIcon /> {totalComments} Comments\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                   </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n            <div className={classes.list}  style={{ marginTop: '5%' }}>\n                {isBusy && <LinearProgress color=\"secondary\" style={{ marginTop: '3%', height: '2rem' }}/>}\n                {dataAvailable && data && <InfiniteScroll\n                    pageStart={0}\n                    loadMore={fetchData}\n                    hasMore={hasMoreItems}>\n                    {items}\n                </InfiniteScroll>}\n            </div>\n            {openDetails && <div>\n                <PostDetails\n                    opened={openDetails}\n                    onClose={() => setOpenDetails(false)}\n                    post={selectedPost}/>\n            </div>}\n        </div>\n    );\n}\n","import {getCookie} from \"./cookie\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport React from \"react\";\n\n/**\n * Authentication methods to check cookies and handle auth.\n * @type {{authenticate(*): void, signout(*=): void, isAuthenticated: boolean}}\n */\nexport const auth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        if (getCookie('token') !== '') {\n            auth.isAuthenticated = true;\n        }\n    },\n    signout(cb) {\n        auth.isAuthenticated = false;\n        setTimeout(cb, 100);\n    }\n};\n\n/**\n * Private Routes which prevents rendering until login.\n *\n * @param ChildComponent\n * @param rest\n * @returns {*}\n * @constructor\n */\nexport const PrivateRoute = ({ component: ChildComponent, ...rest })  => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                getCookie('token') !== '' ? (\n                    <ChildComponent {...props} {...rest}/>\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport './App.css';\nimport Login from './Login';\nimport Dashboard from \"./Dashboard\";\nimport Profile from \"./Profile\";\nimport { auth, PrivateRoute} from \"./utils/auth\";\n\n\n/**\n * Render App\n * @returns {*}\n * @constructor\n */\nfunction App() {\n  return (\n    <div className=\"flexwrapper\">\n        <Router>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    render={() => {\n                        return (\n                            auth.isAuthenticated ?\n                                <Redirect to=\"/dashboard\" /> :\n                                <Redirect to=\"/login\" />\n                        );\n                    }}\n                />\n                <Route path=\"/login\">\n                    <Login />\n                </Route>\n                <PrivateRoute path=\"/dashboard\">\n                    <Dashboard />\n                </PrivateRoute>\n                <PrivateRoute\n                    path=\"/profile/:id\"\n                    component={Profile}\n                />\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\"\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === \"[::1]\"\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \"\n              + \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \"\n                  + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n          <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}