{"version":3,"sources":["Posts.jsx","latestPost.jsx","createPosts.jsx","cookies.js","login.jsx","PostDetails.jsx","Post.jsx","Dashboard.jsx","Profile.jsx","App.jsx","serviceWorker.js","index.jsx","images/login.jpeg"],"names":["gql","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","Login","onSuccessfulLogin","useState","email","setEmail","password","setPassword","redirect","setRedirect","getField","fieldId","getElementById","loginValidated","token","cvalue","ext","d","Date","setTime","getTime","expires","toUTCString","setCookie","loginUser","fetch","method","headers","Headers","body","JSON","stringify","then","res","json","console","log","catch","e","typeAuto","text","a","data","field","value","letter","shift","setTimeout","autoTypeMe","loginWithMockUser","to","alt","src","BackgroundImage","className","type","placeholder","autoComplete","id","onChange","target","disabled","onClick","root","ReactDOM","render","DialogContent","withStyles","theme","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","MuiDialogContent","DialogActions","MuiDialogActions","PostDetails","opened","React","open","setOpen","handleClose","Dialog","aria-labelledby","dividers","gutterBottom","Button","autoFocus","useStyles","makeStyles","maxWidth","media","height","width","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","green","skeletonStyle","background","Post","image","content","userName","onUserClick","imgLoading","setImgLoading","openDetail","setOpenDetail","Card","style","marginTop","CardHeader","Skeleton","animation","Avatar","action","title","marginBottom","subheader","onLoad","CardContent","component","CardActions","disableSpacing","flexGrow","menuButton","marginRight","Dashboard","onProfileClick","setData","isBusy","setBusy","skip","setSkip","useEffect","url","response","posts","fetchData","AppBar","Toolbar","LinearProgress","Array","isArray","map","photos","user","thumbUrl","display","flexWrap","justifyContent","overflow","flexDirection","paper","list","img","maxHeight","large","Profile","match","params","userId","dataAvailable","Grid","container","item","ButtonBase","xs","md","direction","GridList","cellHeight","cols","GridListTile","key","alignItems","auth","isAuthenticated","authenticate","cb","signout","PrivateRoute","ChildComponent","rest","pathname","state","from","location","App","exact","path","Boolean","window","hostname","createMuiTheme","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.2e403868.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nexport const POSTS = gql`\n  {\n    getPreviousPosts {\n      content\n      date\n     }\n  }\n`;\n\nexport default function Posts() {\n  const {\n    loading, error, data = {},\n  } = useQuery(POSTS);\n\n  if (loading) { return <p>Loading...</p>; }\n  if (error) { return <p>Error!</p>; }\n\n  const { getPreviousPosts: posts } = data;\n\n  if (!posts || !posts.length) {\n    return <span />;\n  }\n\n  return posts.map(({ content, date }) => (\n    <p key={`${date}`}>\n      {content}\n      <br />\n      <br />\n      <em>\n        {' '}\n        Date posted:\n        {date}\n      </em>\n    </p>\n  ));\n}\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport './index.css';\n\nexport const GET_LATEST_POST_QUERY = gql`\n  {\n    getLatestPost {\n      content\n      date\n     }\n  }\n`;\n\nexport default function LatestPost() {\n  const { loading, error, data = {} } = useQuery(GET_LATEST_POST_QUERY);\n\n  if (loading) { return <p>Loading...</p>; }\n  if (error) { return <p>Error :(</p>; }\n\n  if (!data.getLatestPost) {\n    return <span />;\n  }\n\n  const {\n    getLatestPost: {\n      content: latestPostContent,\n      date: latestPostDate,\n    },\n  } = data;\n\n  return (\n    <div>\n      <div className=\"latestpost\">\n        <div>\n          <h1>{latestPostContent}</h1>\n          <br />\n          <br />\n          <em>\n            Date posted:\n            {latestPostDate}\n          </em>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { gql } from 'apollo-boost';\nimport React, { useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { POSTS } from './Posts';\nimport { GET_LATEST_POST_QUERY } from './latestPost';\nimport './index.css';\n\nexport const CREATE_POST_MUTATION = gql`\nmutation CreatePost($content: String) {\n  createPost(content: $content) {\n    content,\n    date\n  }\n}`;\n\nexport default function CreatePosts() {\n  const input = useRef();\n  const [text, setContent] = useState('');\n  const [createPost, { loading }] = useMutation(CREATE_POST_MUTATION, {\n    awaitRefetchQueries: true,\n    refetchQueries: [{\n      query: POSTS,\n    }, {\n      query: GET_LATEST_POST_QUERY,\n    }],\n  });\n\n  if (loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"line\" />\n        <div className=\"line\" />\n        <div className=\"line\" />\n      </div>\n    );\n  }\n\n  const typeAuto = (text, fieldId) => {\n      const data = text.split('');\n      const field = document.getElementById(fieldId);\n      field.value = '';\n      (function autoTypeMe() {\n          var letter = data.shift();\n          field.value += letter;\n\n          if (data.length) {\n              setTimeout(autoTypeMe, 20);\n          }\n\n      }());\n  };\n\n  const loginWithMockUser = () => {\n      const username = 'mockuser@graminsta.com';\n      const password = 'mockuser@graminsta';\n      typeAuto(username, 'username');\n      typeAuto(password, 'password');\n  };\n\n  const handleClickEvent = () => {\n    const content = input.current.value;\n    createPost({ variables: { content } });\n  };\n\n  return (\n    <div>\n      {/*<textarea*/}\n      {/*  placeholder=\"Share whats on your mind.\"*/}\n      {/*  id=\"text\"*/}\n      {/*  name=\"text\"*/}\n      {/*  rows=\"4\"*/}\n      {/*  ref={input}*/}\n      {/*  style={{*/}\n      {/*    height: '300px',*/}\n      {/*    overflow: 'scroll',*/}\n      {/*    resize: 'none',*/}\n      {/*    wordWrap: 'break-word',*/}\n      {/*  }}*/}\n      {/*/>*/}\n      {/*<br />*/}\n      <input id=\"button\" type=\"button\" onClick={handleClickEvent} value=\"Create\" />\n      <input id=\"button2\" type=\"button\" onClick={loginWithMockUser} value=\"Login with mock user\" style={{ width: '500px', height: '50px', 'border-radius': '2px', border: 'solid black 1px'}}/>\n    </div>\n  );\n}\n","export const setCookie = (cname, cvalue, ext) => {\n  var d = new Date();\n  d.setTime(d.getTime() + (ext));\n  var expires = \"expires=\"+ d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nexport const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var decodedCookie = decodeURIComponent(document.cookie);\n  var ca = decodedCookie.split(';');\n  for(var i = 0; i <ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","import React, { useState, useEffect } from 'react';\nimport BackgroundImage from './images/login.jpeg';\nimport { setCookie } from './cookies';\nimport ReactDOM from \"react-dom\";\nimport { Redirect } from 'react-router'\nimport App from \"./App\";\nexport default function Login ({ onSuccessfulLogin }) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const getField = (fieldId) => {\n        return document.getElementById(fieldId);\n    };\n\n    const loginValidated = (token) => {\n                setCookie('token', token, 60*1000);\n                setRedirect(true);\n    }\n\n    const loginUser = (email, password) => {\n        fetch('http://localhost:8078/login', {\n            method: 'POST',\n            headers: new Headers({\n                'Authorization': 'Basic eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU5NjQwNjY3MywiZXhwIjoxNTk2NDEwMjczfQ.7GQBLLDQFZxm1dXPQTd3jN0ArmHOoyPxOUb5bTTMcrs',\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify({\n                email,\n                password,\n            })\n        }).then(res => res.json()).then(res => {\n            console.log(res);\n            if (res.token) {\n               loginValidated(res.token);\n            }\n        }).catch(e => {\n            throw e;\n        });\n    } ;\n\n    const typeAuto = async (text, fieldId) => {\n        const data = text.split('');\n        const field = getField(fieldId);\n        field.value = '';\n        await (async function autoTypeMe() {\n            var letter = data.shift();\n            field.value += letter;\n            if (data.length) {\n                setTimeout(await autoTypeMe, 20);\n            }\n        }());\n    };\n\n    const loginWithMockUser = async () => {\n        // const email = 'demouser@graminsta.com';\n        // const password = 'demouser@graminsta';\n        const email = 'Dee0@gmail.com';\n        const password = 'fakepass';\n        await typeAuto(email, 'email');\n        await typeAuto(password, 'password');\n        await loginUser(email, password);\n    };\n\n    return (\n        <div>\n            {redirect && <Redirect to=\"/dashboard\" />}\n           <img alt=\"\" src={BackgroundImage} className=\"bg-image\"/>\n            <div className=\"login-form overlay\">\n                <div className=\"text-center curl-fonts large-fonts\">\n                    <h1><b>Gram<i>Insta</i></b></h1>\n                </div>\n                <br/>\n                <div>\n                    <h2 className=\"text-center\">Login</h2>\n                    <div className=\"content\">\n                        <div className=\"input-field\">\n                            <input\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                autoComplete=\"nope\"\n                                id=\"email\"\n                                value={email}\n                                onChange={(e) => {setEmail(e.target.value)}}\n                                disabled\n                            />\n                        </div>\n                        <div className=\"input-field\">\n                            <input\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                autoComplete=\"new-password\"\n                                id=\"password\"\n                                value={password}\n                                onChange={(e) => {setPassword(e.target.value)}}\n                                disabled\n                            />\n                        </div>\n                        <a className=\"link\">gramInsta, love thy art</a>\n                    </div>\n                    {/*<div className=\"action\">*/}\n                    {/*    <button className=\"btn-red\">Register</button>*/}\n                    {/*    <button onClick={() => loginUser(email, password)}>Sign in</button>*/}\n                    {/*</div>*/}\n                    <div>\n                        <button className=\"btn-red\" onClick={loginWithMockUser}>Login as mock user</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst root = document.getElementById('login');\n\nif (typeof document !== 'undefined' && root) { ReactDOM.render(<Login />, root); }\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport default function PostDetails({ opened }) {\n    const [open, setOpen] = React.useState(opened);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogContent dividers>\n                    <Typography gutterBottom>\n                        Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n                        in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                    </Typography>\n                    <Typography gutterBottom>\n                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                        lacus vel augue laoreet rutrum faucibus dolor auctor.\n                    </Typography>\n                    <Typography gutterBottom>\n                        Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                        scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                        auctor fringilla.\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Save changes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red, green, grey, yellow } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Link } from 'react-router-dom';\nimport PostDetails from \"./PostDetails\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 600,\n    },\n    media: {\n        height: 500,\n        width: 750,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: green[500],\n    },\n}));\n\nconst skeletonStyle = { background: 'lightPink' };\n\nexport default function Post({ image, content, userName = '', id, onUserClick }) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n    const [imgLoading, setImgLoading] = React.useState(true);\n    const [openDetail, setOpenDetail]= React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n       <div>\n           <Card className={classes.root} style={{ marginLeft: '30%', marginTop: '5%' }} onClick={() => {\n                setOpenDetail(true);\n           }}>\n               <CardHeader\n                   avatar={\n                       imgLoading ? (\n                           <Skeleton style={skeletonStyle} animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                       ) : (\n                           <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                               {userName.split('')[0]}\n                           </Avatar>\n                       )\n                   }\n                   action={\n                       <IconButton aria-label=\"settings\">\n                           <MoreVertIcon />\n                       </IconButton>\n                   }\n                   title={imgLoading ?\n                       (\n                           <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />\n                       ) :\n                       (<Link to={`profile/${id}`}>{userName} </Link>)\n                      }\n                   subheader={imgLoading ? <Skeleton animation=\"wave\" height={10} width=\"40%\" /> :  '5 hours ago'}\n               />\n               {imgLoading ?  <Skeleton style={skeletonStyle} variant=\"rect\" width={600} height={500} /> : null}\n               {    <img\n                   width=\"600px\"\n                   height=\"500px\"\n                   src={image}\n                   title=\"Paella dish\"\n                   onLoad={() => {setImgLoading(false)}}\n               />\n               }\n               <CardContent>\n                   <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                       {content}\n                   </Typography>\n               </CardContent>\n               <CardActions disableSpacing>\n                   <IconButton aria-label=\"add to favorites\">\n                       <FavoriteIcon />\n                   </IconButton>\n               </CardActions>\n           </Card>\n            <PostDetails opened={openDetail}/>\n       </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Post from './Post';\nimport { getCookie } from './cookies'\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Dashboard({ onProfileClick }) {\n    const classes = useStyles();\n\n\n    const [data, setData] = useState(null);\n    const [isBusy, setBusy] = useState(true);\n    const [skip, setSkip] = useState(0);\n\n    useEffect(() => {\n        setBusy(true);\n        async function fetchData() {\n            const take = 10;\n            const url = `http://localhost:8078/posts?take=${take}&skip=${skip}`;\n\n            fetch(url, {\n                method: 'get',\n                headers: new Headers({\n                    'Authorization': `Basic ${getCookie('token')}`,\n                    'Content-Type': 'application/json'\n                }),\n            }).then(res => res.json()).then((response) => {\n                setBusy(false);\n                if (response.posts) {\n                    const posts = response.posts;\n                    setData([ ...data, posts ])\n                    setSkip(skip + posts.length);\n                }\n            }).catch(() => {\n                setBusy(false);\n                setData(null);\n            });\n        }\n\n        fetchData();\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" color=\"white\">\n                <Toolbar>\n                    <Typography variant=\"h4\">\n                        <span className=\"curl-fonts\">GramInsta</span>\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n            {isBusy && <LinearProgress color=\"secondary\" style={{ marginTop: '3%', height: '2rem' }}/>}\n            {!isBusy && data && Array.isArray(data) && <div>\n                {data && data.map(({ photos, content, user: { name, id } })=> {\n                    const [{ thumbUrl }] = photos;\n                    // eslint-disable-next-line no-unused-expressions\n                    return <Post image={thumbUrl} content={content} userName={name} id={id} onUserClick={(id) => {onProfileClick()}} />\n                })}\n            </div>}\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport Favorite from '@material-ui/icons/Favorite';\nimport { getCookie } from './cookies'\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        flexDirection: 'column',\n        backgroundColor: theme.palette.background.paper,\n    },\n    user: {\n        flexGrow: 1,\n        marginTop: '5%',\n    },\n    list: {\n        flexGrow: 1,\n        padding: theme.spacing(2),\n        margin: 'auto',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 500,\n    },\n    image: {\n        width: 128,\n        height: 128,\n    },\n    img: {\n        margin: 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        maxHeight: '100%',\n    },\n    large: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n    },\n}));\n\nexport default function Profile({ match: { params: { id: userId = 0 } = {} } = {}}) {\n    const classes = useStyles();\n    const [data, setData] = useState(null);\n    const [isBusy, setBusy] = useState(true);\n\n\n    useEffect(() => {\n        setBusy(true);\n        async function fetchData() {\n            const url = `http://localhost:8078/posts?user_id=${userId}`;\n\n            fetch(url, {\n                method: 'get',\n                headers: new Headers({\n                    'Authorization': `Basic ${getCookie('token')}`,\n                    'Content-Type': 'application/json'\n                }),\n            }).then(res => res.json()).then((response) => {\n                setBusy(false);\n                setData(response);\n            }).catch(() => {\n                setBusy(false);\n                setData(null);\n            });\n        }\n\n        fetchData();\n    }, []);\n\n    const dataAvailable = !isBusy && data && data[0];\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" color=\"white\">\n                <Toolbar>\n                    <Typography variant=\"h4\">\n                        <span className=\"curl-fonts\">GramInsta</span>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.user}>\n                <div className={classes.paper}>\n                    <Grid container spacing={6}>\n                        <Grid item>\n                            <ButtonBase className={classes.image}>\n                                {dataAvailable ? (\n                                <Avatar aria-label=\"recipe\" className={classes.large}>\n                                    <h1>{data[0].user.name.split('')[0]}</h1>\n                                </Avatar>) : (\n                                    <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                                    )\n                                }\n                            </ButtonBase>\n                        </Grid>\n                        <Grid item xs={12} md container>\n                            <Grid item xs container direction=\"column\" spacing={4}>\n                                <Grid item xs>\n                                    {dataAvailable ? (\n                                        <Typography gutterBottom variant=\"h3\">\n                                            {data[0].user.name}\n                                        </Typography>): (\n                                        <Skeleton animation=\"wave\" variant=\"text\"/>\n                                        )\n                                    }\n                                   <Grid item xs container direction=\"row\" spacing={2}>\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <PostAddIcon /> {data.length} Posts\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                       <Grid item xs>\n                                           {dataAvailable ? (\n                                               <Typography gutterBottom variant=\"body1\">\n                                                   <ChatBubbleIcon /> {data.length} Comments\n                                               </Typography>): (\n                                               <Skeleton animation=\"wave\" variant=\"text\"/>\n                                           )\n                                           }\n                                       </Grid>\n                                   </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n            <div className={classes.list}  style={{ marginTop: '5%' }}>\n\n                {isBusy && <LinearProgress color=\"secondary\" style={{ marginTop: '3%', height: '2rem' }}/>}\n                {dataAvailable && <GridList cellHeight={293} className=\"gridList\" cols={3}>\n                    {data && data.map(({ photos, content, user: { name }}) => {\n                        const [{thumbUrl}] = photos;\n                        return (\n                            <GridListTile className=\"imgContainer\" key={thumbUrl} cols={1}>\n                                <img className=\"image\" src={thumbUrl} alt={content} />\n                                <div className=\"img-overlay\">\n                                    <Grid container direction=\"row\" spacing={4}>\n                                        <Grid item xs style={{\n                                            display: 'flex',\n                                            alignItems: 'center'\n                                        }}>\n                                            <Favorite style={{ marginTop: '2px'}}/> 13\n                                        </Grid>\n\n                                        <Grid item xs style={{\n                                            display: 'flex',\n                                            alignItems: 'center'\n                                        }}>\n                                            <ChatBubbleIcon style={{ marginTop: '2px'}}/> 24\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </GridListTile>\n                        );\n                    })}\n                </GridList>}\n            </div>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport Posts from './Posts';\nimport CreatePosts from './createPosts';\nimport LatestPost from './latestPost';\nimport Login from './login';\nimport Loader from \"./Loader\";\nimport Post from \"./Post\";\nimport Dashboard from \"./Dashboard\";\nimport Profile from \"./Profile\";\nimport { getCookie } from './cookies';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\n\nconst auth = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        if (getCookie('token') !== '') {\n            auth.isAuthenticated = true;\n        }\n    },\n    signout(cb) {\n        auth.isAuthenticated = false;\n        setTimeout(cb, 100);\n    }\n};\n\nfunction PrivateRoute({ component: ChildComponent, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                getCookie('token') !== '' ? (\n                    <ChildComponent {...props} {...rest}/>\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction App() {\n\n  // const [loggedIn, setLoggedIn] = useState(false);\n  // const tokenExists = getCookie('token') !== '';\n  // const [route, setRoute] = useState('');\n\n  return (\n    <div className=\"flexwrapper\">\n     {/*<Loader />*/}\n     {/* <div>*/}\n     {/*     {!tokenExists && <Login onSuccessfulLogin={value => { setLoggedIn(value); setRoute('dashboard') }} />}*/}\n     {/*     {tokenExists && route === 'dashboard' && <Dashboard onProfileClick={() => setRoute('profile')}/>}*/}\n     {/*     {tokenExists && route === 'profile' && <Profile />}*/}\n     {/* </div>*/}\n\n        <Router>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    render={() => {\n                        return (\n                            auth.isAuthenticated ?\n                                <Redirect to=\"/dashboard\" /> :\n                                <Redirect to=\"/login\" />\n                        );\n                    }}\n                />\n                <Route path=\"/login\">\n                    <Login />\n                </Route>\n                <PrivateRoute path=\"/dashboard\">\n                    <Dashboard />\n                </PrivateRoute>\n                <PrivateRoute\n                    path=\"/profile/:id\"\n                    component={Profile}\n                />\n            </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\"\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === \"[::1]\"\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \"\n              + \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \"\n                  + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n          <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\nconst root = document.getElementById('index');\n\nif (typeof document !== 'undefined' && root) { ReactDOM.render(<App />, root); }\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/login.a84414a6.jpeg\";"],"sourceRoot":""}